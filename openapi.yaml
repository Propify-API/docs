openapi: 3.1.0
info:
  version: 1.0.0
  title: Propify API
security:
  - propify-api-key: []
  - propify-api-secret: []
components:
  schemas: {}
  parameters: {}
paths:
  /v1/admin/data-diffs:
    get:
      tags:
        - admin
      summary: Get all data diffs
      description: Get all data diffs
      parameters: []
      responses:
        "200":
          description: Get all data diffs
        "400":
          description: invalid input
  /v1/amenities:
    get:
      tags:
        - amenities
      summary: Get all amenities
      description: Get all amenities. The RealPage "Registered Vendor" API does not
        support reading amenities.
      parameters: []
      responses:
        "200":
          description: Get all amenities. The RealPage "Registered Vendor" API does not
            support reading amenities.
        "400":
          description: invalid input
  "/v1/amenities/{id}":
    get:
      tags:
        - amenities
      summary: Get an amenity by id
      description: Get an amenity by id
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get an amenity by id
        "400":
          description: invalid input
  /v1/applicants:
    get:
      tags:
        - applicants
      summary: Get all applicants
      description: Get all applicants
      parameters: []
      responses:
        "200":
          description: Get all applicants
        "400":
          description: invalid input
    post:
      tags:
        - applicants
      summary: Create applicant
      description: Create an applicant for an integration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                x_property_id:
                  type: string
                  description: The property ID with which to associate the resident. This is the
                    ID of the object in Rentmanager. Note that it should be
                    passed as a string and not an integer.
                originating_lead_source_id:
                  type: string
                  description: The ID of the lead source. This maps to the originatingLeadSourceId
                    property of the Application object.
                first_name:
                  type: string
                  description: The first name of the resident.  This value maps to both the
                    FirstName and PrimaryContact.FirstName properties of the
                    Tenant object
                last_name:
                  type: string
                  description: The last name of the resident.  This value maps to both the
                    LastName and PrimaryContact.LastName properties of the
                    Tenant object
                x_unit_id:
                  type: string
                  description: The unit ID to associate the applicant with
                email_1:
                  type: string
                  format: email
                  description: The primary email address for the resident.  This value maps to the
                    PrimaryContact.Email property of the Tenant object
                date_of_birth:
                  type: string
                  format: date-time
                  description: The date of birth of the resident.  This value maps to the
                    PrimaryContact.DateOfBirth property of the Tenant object.
                address_1:
                  type: string
                  description: Street address for the resident. This maps to the Street property
                    of the primary address of the Tenant object
                address_2:
                  type: string
                  description: Second line of the street address for the applicant.  This maps to
                    the addressLine2 property of the Applicant's primary
                    address.
                city:
                  type: string
                  description: City of the resident's primary address
                state:
                  type: string
                  description: State of the resident's primary address
                zip:
                  type: string
                  description: Zip/Postal Code of the resident's primary address
                phone_1:
                  type: string
                  description: Applicant's primary phone number.  This will be assumed to be a
                    HOME phone number unless phone_1_type is also set.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the applicant's primary phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'.
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                send_rental_application_email:
                  type: boolean
                  default: false
                  description: Whether to send the new applicant an email with a link to the
                    online application form. Defaults to FALSE.
                phone_2:
                  type: string
                  description: Applicant's secondary phone number.  This will be assumed to be a
                    MOBILE phone number unless phone_2_type is also set.
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the applicant's secondary phone number.  The value
                    passed in here must be one of 'HOME', 'WORK', 'MOBILE',
                    FAX'.
                middle_name:
                  type: string
                  description: The middle name of the resident.  This value maps to the
                    PrimaryContact.MiddleName property of the Tenant object
              required:
                - integration_id
      responses:
        "200":
          description: Create an applicant for an integration.
        "400":
          description: invalid input
  "/v1/applicants/{id}":
    get:
      tags:
        - applicants
      summary: Get an applicant by ID
      description: Get an applicant by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get an applicant by ID
        "400":
          description: invalid input
    put:
      tags:
        - applicants
      summary: Update applicant
      description: Update an applicant for an integration.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                last_name:
                  type: string
                  description: The last name of the applicant.
                first_name:
                  type: string
                  description: The first name of the applicant.
                x_unit_id:
                  type: string
                  description: The ID of the unit to which this applicant is applying. This maps
                    to the unitSpaceId property of the Application object.
                email_1:
                  type: string
                  format: email
                  description: The primary email address for the applicant.
                phone_1:
                  type: string
                  description: Applicant's primary phone number. This maps to the phoneNumber
                    property of the Applicant object.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the applicant's primary phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'. This
                    maps to the phoneNumberTypeId property of the Applicant
                    object.
                phone_2:
                  type: string
                  description: Resident's secondary phone number.  This will be assumed to be a
                    MOBILE phone number unless phone_2_type is also set.
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the resident's secondary phone number.  The value
                    passed in here must be one of 'HOME', 'WORK', 'MOBILE',
                    FAX'.
                x_property_id:
                  type: string
                  description: The property ID with which to associate the resident. This is the
                    ID of the property in Rentmanager.  Note that it should be
                    passed as a string and not an integer.
                originating_lead_source_id:
                  type: string
                  description: The ID of the lead source. This maps to the originatingLeadSourceId
                    property of the Application object.
                date_of_birth:
                  type: string
                  format: date-time
                  description: The date of birth of the resident.  This value maps to the
                    PrimaryContact.DateOfBirth property of the Tenant object.
                address_1:
                  type: string
                  description: Street address for the applicant.
                address_2:
                  type: string
                  description: Street address for the applicant.
                city:
                  type: string
                  description: City of the applicant's primary address
                state:
                  type: string
                  description: State of the applicant's primary address
                zip:
                  type: string
                  description: Zip/Postal Code of the applicant's primary address
                middle_name:
                  type: string
                  description: The middle name of the applicant.
                country:
                  type: string
                  description: Country of the applicant's primary address
              required:
                - id
      responses:
        "200":
          description: Update an applicant for an integration.
        "400":
          description: invalid input
  /v1/leads:
    get:
      tags:
        - leads
      summary: Get all leads
      description: ""
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: invalid input
    post:
      tags:
        - leads
      summary: Create lead
      description: Create a lead for an integration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                last_name:
                  type: string
                  description: The last name of the prospect.  This value maps to the LastName
                    property of the Prospect object
                first_name:
                  type: string
                  description: The first name of the prospect.  This value maps to the FirstName
                    property of the Prospect object
                email_1:
                  type: string
                  format: email
                  description: The primary email address for the prospect.  This value maps to the
                    Email property of the Prospect object
                phone_1:
                  type: string
                  description: Prospect's primary phone number.  This will be assumed to be a HOME
                    phone number unless phone_1_type is also set.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the prospect's primary phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'.
                phone_2:
                  type: string
                  description: Prospect's secondary phone number.  This will be assumed to be a
                    MOBILE phone number unless phone_2_type is also set.
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the prospect's secondary phone number.  The value
                    passed in here must be one of 'HOME', 'WORK', 'MOBILE',
                    FAX'.
                address_1:
                  type: string
                  description: First line of the street address for the prospect.
                address_2:
                  type: string
                  description: Second line of the street address for the prospect.
                city:
                  type: string
                  description: The city that the prospect lives in.
                state:
                  type: string
                  description: State of the prospect's primary address.
                zip:
                  type: string
                  description: Zip/Postal Code of the prospect's primary address.
                country:
                  type: string
                  description: Country of the prospect's primary address
              required:
                - integration_id
      responses:
        "200":
          description: Create a lead for an integration.
        "400":
          description: invalid input
  "/v1/leads/{id}":
    get:
      tags:
        - leads
      summary: Get a lead by ID
      description: Get a lead by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a lead by ID
        "400":
          description: invalid input
    put:
      tags:
        - leads
      summary: Update lead
      description: Update a lead.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                last_name:
                  type: string
                  description: The last name of the prospect.  This value maps to the LastName
                    property of the Prospect object
                first_name:
                  type: string
                  description: The first name of the prospect.  This value maps to the FirstName
                    property of the Prospect object
                email_1:
                  type: string
                  format: email
                  description: The primary email address for the prospect.  This value maps to the
                    Email property of the Prospect object
                phone_1:
                  type: string
                  description: Prospect's primary phone number.  This will be assumed to be a HOME
                    phone number unless phone_1_type is also set.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the prospect's primary phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'.
                phone_2:
                  type: string
                  description: Prospect's secondary phone number.  This will be assumed to be a
                    MOBILE phone number unless phone_2_type is also set.
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the prospect's secondary phone number.  The value
                    passed in here must be one of 'HOME', 'WORK', 'MOBILE',
                    FAX'.
                address_1:
                  type: string
                  description: First line of the street address for the prospect.
                address_2:
                  type: string
                  description: Second line of the street address for the prospect.
                city:
                  type: string
                  description: The city that the prospect lives in.
                state:
                  type: string
                  description: State of the prospect's primary address.
                zip:
                  type: string
                  description: Zip/Postal Code of the prospect's primary address.
                country:
                  type: string
                  description: Country of the prospect's primary address
              required:
                - id
      responses:
        "200":
          description: Update a lead.
        "400":
          description: invalid input
  /v1/leases:
    get:
      tags:
        - leases
      summary: Get all leases
      description: Get all leases
      parameters: []
      responses:
        "200":
          description: Get all leases
        "400":
          description: invalid input
    post:
      tags:
        - leases
      summary: Create lease
      description: Create a lease for an integration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                type:
                  type: string
                  enum:
                    - Fixed
                    - FixedWithRollover
                    - AtWill
                  description: The lease type.  The value of this field must be one of "Fixed",
                    "FixedWithRollover", or "AtWill"
                x_unit_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Rentvine ID number of the unit that this lease is associated
                    with.
                start_date:
                  type: string
                  format: date-time
                  description: The date that the lease begins
                end_date:
                  type: string
                  format: date-time
                  description: The date that the lease ends
                send_welcome_email:
                  type: boolean
                  default: false
                  description: A boolean value indicating whether or not to send a welcome email
                    to the tenant
                first_name:
                  type: string
                  description: The first name of the primary resident on this lease.
                last_name:
                  type: string
                  description: The last name of the primary resident on this lease.
                email_1:
                  type: string
                  format: email
                  description: The email address for the primary resident on this lease.
                email_2:
                  type: string
                  format: email
                  description: The secondary/alternate email address for the primary resident on
                    this lease.  This value maps to the AlternateEmail property
                    of the Tenant object
                phone_1:
                  type: string
                  description: The phone number of the primary resident on this lease.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the primary resident's phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'.
                phone_2:
                  type: string
                  description: The second phone number of the primary resident on this lease.
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the primary resident's secondary phone number.  The
                    value passed in here must be one of 'HOME', 'WORK',
                    'MOBILE', FAX'.
                date_of_birth:
                  type: string
                  format: date-time
                  description: The resident's date of birth
                address_1:
                  type: string
                  description: The first line of the primary resident's address.
                address_2:
                  type: string
                  description: The second line of the primary resident's address.
                city:
                  type: string
                  description: The city of the primary resident's address
                state:
                  type: string
                  description: The state of the primary resident's address
                zip:
                  type: string
                  pattern: "[0-9]+"
                  description: The postal code of the primary resident's address. The value passed
                    to th
                country:
                  type: string
                  description: Country of the resident's primary address.  This maps to the
                    Address.Country property of the Tenant object.  This value
                    must be a valid member of the Buildium country enum,
                    documented at
                    https://developer.buildium.com/#operation/LeasesExternalApi_CreateLease
                address_1_alternate:
                  type: string
                  maxLength: 100
                  description: First line of the street address for the primary resident. This
                    maps to the Address.AddressLine1 property of the primary
                    address of the Tenant object
                address_2_alternate:
                  type: string
                  maxLength: 100
                  description: Second line of the street address for the primary resident.  This
                    maps to the Address.AddressLine2 property of the Tenant
                    object.
                city_alternate:
                  type: string
                  maxLength: 100
                  description: City of the primary resident's address. This maps to the
                    Address.City property of the Tenant object.
                state_alternate:
                  type: string
                  description: State of the primary resident's address. This maps to the
                    Address.State property of the Tenant object.
                zip_alternate:
                  type: string
                  description: Zip/Postal Code of the primary resident's address. This maps to the
                    Address.PostalCode property of the Tenant object.
                country_alternate:
                  type: string
                  description: Country of the resident's primary address.  This maps to the
                    Address.Country property of the Tenant object.  This value
                    must be a valid member of the Buildium country enum,
                    documented at
                    https://developer.buildium.com/#operation/LeasesExternalApi_CreateLease
                rent_cycle:
                  type: string
                  enum:
                    - Monthly
                    - Weekly
                    - Every2Weeks
                    - Quarterly
                    - Yearly
                    - Every2Months
                    - Daily
                    - Every6Months
                    - OneTime
                  description: How often rent charges will be automatically appended to the lease
                    ledger. Must be one of 'Monthly', 'Weekly', 'Every2Weeks',
                    'Quarterly', 'Yearly', 'Every2Months', 'Daily',
                    'Every6Months', 'OneTime',
                rent_amount_in_cents:
                  type: integer
                  description: The amount of rent to be appended to the lease ledger, in cents
                rent_due_date:
                  type: string
                  pattern: "[0-9]{4}[-/][0-9]{1,2}[-/][0-9]{1,2}"
                  description: The next date on which rent is due. If a rent cycle other than
                    "OneTime" is provided, this will also be the date on which
                    that cycle begins. Expected format is YYYY/MM/DD
                gl_account_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The general ledger account under which to record the rent charge
                x_property_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Rentvine ID number of the property that this lease is
                    associated with. This field is not required, and the Unit ID
                    provided in x_unit_id takes precedence.
                unit_space_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Entrata ID number of the unit space that this lease is
                    associated with.  While this is passed as a string, the
                    value must parse as an integer.
                floor_plan_code:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Entrata ID number of the floorplan.  While this is passed as a
                    string, the value must parse as an integer.
                lease_term_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Entrata ID number of the lease term.  While this is passed as a
                    string, the value must parse as an integer.
                customer_relationship_type_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: Entrata ID number of the Customer Relationship Type.  While this is
                    passed as a string, the value must parse as an integer.
                x_resident_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Rentvine ID number of the resident (referred to as a Contact in
                    Rentvine) that the lease is associated with
                scheduled_move_out_date:
                  type: string
                  format: date-time
                  description: The date that the resident is scheduled to move out
                realized_move_in_date:
                  type: string
                  format: date-time
                  description: The date that the resident moved in
                realized_move_out_date:
                  type: string
                  format: date-time
                  description: The date that the resident moved out
                scheduled_move_in_date:
                  type: string
                  format: date-time
                  description: The date that the resident intends to move in
              required:
                - integration_id
      responses:
        "200":
          description: Create a lease for an integration.
        "400":
          description: invalid input
  "/v1/leases/{id}":
    get:
      tags:
        - leases
      summary: Get a lease by ID
      description: Get a lease by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a lease by ID
        "400":
          description: invalid input
    put:
      tags:
        - leases
      summary: Update lease
      description: Update a lease for an integration.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                type:
                  type: string
                  enum:
                    - Fixed
                    - FixedWithRollover
                    - AtWill
                  description: The lease type.  The value of this field must be one of "Fixed",
                    "FixedWithRollover", or "AtWill"
                x_unit_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The RentManager ID number of the unit that this lease is associated
                    with
                start_date:
                  type: string
                  format: date-time
                  description: The date that the lease begins
                end_date:
                  type: string
                  format: date-time
                  description: The date that the lease ends
                is_eviction_pending:
                  type: boolean
                  default: false
                  description: Boolean indicating whether the lease has an eviction pending. If
                    not set, defaults to "false"
                automatically_move_out_residents:
                  type: boolean
                  default: false
                  description: Boolean indicating whether residents should be set to "past" status
                    automatically at the expiration of the lease. If not set,
                    defaults to "false"
                x_property_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The RentManager ID number of the property that this lease is
                    associated with.  While this is passed as a string, the
                    value must parse as an integer.
                unit_space_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Entrata ID number of the unit space that this lease is
                    associated with.  While this is passed as a string, the
                    value must parse as an integer.
                floor_plan_code:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Entrata ID number of the floorplan.  While this is passed as a
                    string, the value must parse as an integer.
                lease_term_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The Entrata ID number of the lease term.  While this is passed as a
                    string, the value must parse as an integer.
                x_resident_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: The RentManager ID number of the resident that this lease is
                    associated with
                first_name:
                  type: string
                  description: The first name of the primary resident on this lease.
                last_name:
                  type: string
                  description: The last name of the primary resident on this lease.
                address_1:
                  type: string
                  description: The first line of the primary resident's address.
                address_2:
                  type: string
                  description: The second line of the primary resident's address.
                city:
                  type: string
                  description: The city of the primary resident's address
                state:
                  type: string
                  description: The state of the primary resident's address
                zip:
                  type: string
                  pattern: "[0-9]+"
                  description: The postal code of the primary resident's address. The value passed
                    to th
                email_1:
                  type: string
                  format: email
                  description: The email address for the primary resident on this lease.
                customer_relationship_type_id:
                  type: string
                  pattern: ^[0-9]+$
                  description: Entrata ID number of the Customer Relationship Type.  While this is
                    passed as a string, the value must parse as an integer.
                phone_1:
                  type: string
                  description: The phone number of the primary resident on this lease.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the primary resident's phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'.
                date_of_birth:
                  type: string
                  format: date-time
                  description: The resident's date of birth
                scheduled_move_out_date:
                  type: string
                  format: date-time
                  description: The date that the resident is scheduled to move out
                realized_move_in_date:
                  type: string
                  format: date-time
                  description: The date that the resident moved in
                realized_move_out_date:
                  type: string
                  format: date-time
                  description: The date that the resident moved out
              required:
                - id
      responses:
        "200":
          description: Update a lease for an integration.
        "400":
          description: invalid input
  /v1/listings:
    get:
      tags:
        - listings
      summary: Get all listings
      description: ""
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: invalid input
  "/v1/listings/{id}":
    get:
      tags:
        - listings
      summary: Get a listing by ID
      description: Get a listing by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a listing by ID
        "400":
          description: invalid input
  /v1/properties:
    get:
      tags:
        - properties
      summary: Get all properties
      description: Get all properties
      parameters: []
      responses:
        "200":
          description: Get all properties
        "400":
          description: invalid input
  "/v1/properties/{id}":
    get:
      tags:
        - properties
      summary: Get a property by ID
      description: Get a property by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a property by ID
        "400":
          description: invalid input
  /v1/residents:
    get:
      tags:
        - residents
      summary: Get all residents
      description: Get all residents
      parameters: []
      responses:
        "200":
          description: Get all residents
        "400":
          description: invalid input
    post:
      tags:
        - residents
      summary: Create resident
      description: Create a resident for an integration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                last_name:
                  type: string
                  description: The last name of the resident.  This value maps to both the
                    LastName and PrimaryContact.LastName properties of the
                    Tenant object
                first_name:
                  type: string
                  description: The first name of the resident.  This value maps to both the
                    FirstName and PrimaryContact.FirstName properties of the
                    Tenant object
                email_1:
                  type: string
                  format: email
                  description: The primary email address for the resident.  This value maps to the
                    PrimaryContact.Email property of the Tenant object
                email_2:
                  type: string
                  format: email
                  description: An alternate email address for the resident. This value maps to the
                    AlternateEmail property of the Tenant object.
                date_of_birth:
                  type: string
                  format: date-time
                  description: The date of birth of the resident.  This value maps to the
                    PrimaryContact.DateOfBirth property of the Tenant object.
                address_1:
                  type: string
                  description: Street address for the resident. This maps to the Street property
                    of the primary address of the Tenant object
                address_2:
                  type: string
                  description: Second line of the street address for the resident.  This maps to
                    the Address.AddressLine2 property of the Tenant object.
                city:
                  type: string
                  description: City of the resident's primary address
                state:
                  type: string
                  description: State of the resident's primary address
                zip:
                  type: string
                  description: Zip/Postal Code of the resident's primary address
                country:
                  type: string
                  description: Country of the resident's primary address.  This maps to the
                    Address.Country property of the Tenant object.  This value
                    must be a valid member of the Buildium country enum,
                    documented at
                    https://developer.buildium.com/#operation/RentalTenantsExternalApi_CreateRentalTenant
                address_1_alternate:
                  type: string
                  description: Secondary/alternate street address for the resident. This maps to
                    the Street property of the second address of the Tenant
                    object
                address_2_alternate:
                  type: string
                  description: Second line of the secondary/alternate street address for the
                    resident.  This maps to the AlternateAddress.AddressLine2
                    property of the Tenant object
                city_alternate:
                  type: string
                  description: City of the resident's secondary/alternate address
                state_alternate:
                  type: string
                  description: State of the resident's secondary/alternate address
                zip_alternate:
                  type: string
                  description: Zip/Postal Code of the resident's secondary/alternate address
                country_alternate:
                  type: string
                  description: Country of the resident's secondary/alternate address.  This maps
                    to the AlternateAddress.Country property of the Tenant
                    object.  This value must be a valid member of the Buildium
                    country enum, documented at
                    https://developer.buildium.com/#operation/RentalTenantsExternalApi_CreateRentalTenant
                notes:
                  type: string
                  description: Any notes on the resident.  This value maps to the Comment property
                    of the Tenant object.
                phone_1:
                  type: string
                  description: Resident's primary phone number.  This will be assumed to be a HOME
                    phone number unless phone_1_type is also set.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the resident's primary phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'.
                phone_2:
                  type: string
                  description: Resident's secondary phone number.  This will be assumed to be a
                    MOBILE phone number unless phone_2_type is also set.
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the resident's secondary phone number.  The value
                    passed in here must be one of 'HOME', 'WORK', 'MOBILE',
                    FAX'.
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                x_property_id:
                  type: string
                  description: The property ID with which to associate the resident. This is the
                    ID of the object in Rentmanager. Note that it should be
                    passed as a string and not an integer.
                rent_period:
                  type: string
                  enum:
                    - monthly
                    - weekly
                    - daily
                  description: How often the resident is expected to pay rent.  Allowed values are
                    "monthly", "weekly", and "daily".  Maps to the RentPeriod
                    property of the Tenant object.
                rent_due_day:
                  type: integer
                  minimum: 1
                  maximum: 31
                  description: Day of the month on which the tenant's rent is due.  Maps to the
                    RentDueDay property of the Tenant object
                middle_name:
                  type: string
                  description: The middle name of the resident.  This value maps to the
                    PrimaryContact.MiddleName property of the Tenant object
              required:
                - integration_id
      responses:
        "200":
          description: Create a resident for an integration.
        "400":
          description: invalid input
  "/v1/residents/{id}":
    get:
      tags:
        - residents
      summary: Get a resident by ID
      description: Get a resident by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a resident by ID
        "400":
          description: invalid input
    put:
      tags:
        - residents
      summary: Update resident
      description: Update a resident for an integration.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                last_name:
                  type: string
                  description: The last name of the resident.
                first_name:
                  type: string
                  description: The first name of the resident.
                email_1:
                  type: string
                  format: email
                  description: The primary email address for the resident.
                email_2:
                  type: string
                  format: email
                  description: An alternate email address for the resident. This value maps to the
                    AlternateEmail property of the Tenant object.
                date_of_birth:
                  type: string
                  format: date-time
                  description: The date of birth of the resident.  This value maps to the
                    PrimaryContact.DateOfBirth property of the Tenant object.
                address_1:
                  type: string
                  description: Street address for the resident.
                address_2:
                  type: string
                  description: Street address for the resident.
                city:
                  type: string
                  description: City of the resident's primary address
                state:
                  type: string
                  description: State of the resident's primary address
                zip:
                  type: string
                  description: Zip/Postal Code of the resident's primary address
                country:
                  type: string
                  description: Country of the resident's primary address
                address_1_alternate:
                  type: string
                  description: Secondary/alternate street address for the resident. This maps to
                    the Street property of the second address of the Tenant
                    object
                address_2_alternate:
                  type: string
                  description: Second line of the secondary/alternate street address for the
                    resident.  This maps to the AlternateAddress.AddressLine2
                    property of the Tenant object
                city_alternate:
                  type: string
                  description: City of the resident's secondary/alternate address
                state_alternate:
                  type: string
                  description: State of the resident's secondary/alternate address
                zip_alternate:
                  type: string
                  description: Zip/Postal Code of the resident's secondary/alternate address
                country_alternate:
                  type: string
                  description: Country of the resident's secondary/alternate address.  This maps
                    to the AlternateAddress.Country property of the Tenant
                    object.  This value must be a valid member of the Buildium
                    country enum, documented at
                    https://developer.buildium.com/#operation/RentalTenantsExternalApi_CreateRentalTenant
                notes:
                  type: string
                  description: Any notes on the resident.  This value maps to the Comment property
                    of the Tenant object.
                phone_1:
                  type: string
                  description: Resident's primary phone number.  This will be assumed to be a HOME
                    phone number unless phone_1_type is also set.
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the resident's primary phone number.  The value passed
                    in here must be one of 'HOME', 'WORK', 'MOBILE', FAX'.
                phone_2:
                  type: string
                  description: Resident's secondary phone number.  This will be assumed to be a
                    MOBILE phone number unless phone_2_type is also set.
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: The type of the resident's secondary phone number.  The value
                    passed in here must be one of 'HOME', 'WORK', 'MOBILE',
                    FAX'.
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                middle_name:
                  type: string
                  description: The middle name of the resident.
                x_property_id:
                  type: string
                  description: The property ID with which to associate the resident. This is the
                    ID of the property in Rentmanager.  Note that it should be
                    passed as a string and not an integer.
                rent_period:
                  type: string
                  enum:
                    - monthly
                    - weekly
                    - daily
                  description: How often the resident is expected to pay rent.  Allowed values are
                    "monthly", "weekly", and "daily".  Maps to the RentPeriod
                    property of the Tenant object.
                rent_due_day:
                  type: integer
                  minimum: 1
                  maximum: 31
                  description: Day of the month on which the tenant's rent is due.  Maps to the
                    RentDueDay property of the Tenant object
              required:
                - id
      responses:
        "200":
          description: Update a resident for an integration.
        "400":
          description: invalid input
  /v1/transactions:
    get:
      tags:
        - general-ledger
      summary: Get all general ledger transactions
      description: Get all general ledger transactions
      parameters: []
      responses:
        "200":
          description: Get all general ledger transactions
        "400":
          description: invalid input
    post:
      tags:
        - general-ledger
      summary: Create transaction
      description: Create a transaction for an integration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                invoice_date:
                  type: string
                  format: date-time
                  description: The date the invoice was receieved
                due_date:
                  type: string
                  format: date-time
                  description: The date the invoice was receieved
                memo:
                  type: string
                  maxLength: 245
                  description: A description of the invoice
                x_vendor_id:
                  type: number
                  description: The Buildium ID of the vendor who is sending the invoice
                reference_number:
                  type: string
                  description: Reference or invoice number assigned to the invoice
                x_work_order_id:
                  type: number
                  description: The Buildium ID of a work order to associate this bill with
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      x_accounting_entity_type:
                        type: string
                        enum:
                          - company
                          - property
                        description: The Buildium accounting entity type to associate this payment with.
                          Can be either "property" or "company"
                      x_accounting_entity_id:
                        type: number
                        description: The Buildium ID of the property or company to associate this
                          payment with
                      x_gl_account_id:
                        type: number
                        description: The general ledger account id
                      amount_in_cents:
                        type: number
                        description: The amount of the line item, in cents
                      memo:
                        type: string
                        maxLength: 240
                        description: A description of the line item
                    required:
                      - x_accounting_entity_type
                      - x_accounting_entity_id
                      - x_gl_account_id
                      - amount_in_cents
                  minItems: 1
                  description: Line items associated with the bill
              required:
                - integration_id
      responses:
        "200":
          description: Create a transaction for an integration.
        "400":
          description: invalid input
  "/v1/transactions/{id}":
    get:
      tags:
        - general-ledger
      summary: Get a GL transaction by ID
      description: Get a GL transaction by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a GL transaction by ID
        "400":
          description: invalid input
  /v1/units:
    get:
      tags:
        - units
      summary: Get all units
      description: Get all units
      parameters: []
      responses:
        "200":
          description: Get all units
        "400":
          description: invalid input
  "/v1/units/{id}":
    get:
      tags:
        - units
      summary: Get a unit by ID
      description: Get a unit by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a unit by ID
        "400":
          description: invalid input
    put:
      tags:
        - units
      summary: Update unit
      description: Update a unit for a property.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                number:
                  type: string
                  description: The unit number
                bedrooms:
                  type: string
                  description: The number of bedrooms
                bathrooms:
                  type: string
                  description: The number of bathrooms
                square_feet:
                  type: integer
                  minimum: 0
                  description: The square footage of the unit
                building_number:
                  type: string
                  description: The building number
                building_name:
                  type: string
                  description: The building name
                floor_plan_code:
                  type: string
                  description: The floor plan code
                floor_plan_name:
                  type: string
                  description: The floor plan name
                floor:
                  type: string
                  description: Floor number/name
                street_address_1:
                  type: string
                  description: The street address line 1
                street_address_2:
                  type: string
                  description: The street address line 2
                city:
                  type: string
                  description: The city
                state:
                  type: string
                  description: The state
                zip:
                  type: string
                  description: The zip code
                is_available:
                  type: boolean
                  description: Whether the unit is available
                is_furnished:
                  type: boolean
                  description: Whether the unit is furnished
                is_listed:
                  type: boolean
                  description: Whether the unit is listed
                is_vacant:
                  type: boolean
                  description: Whether the unit is vacant
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
              required:
                - id
      responses:
        "200":
          description: Update a unit for a property.
        "400":
          description: invalid input
  /v1/vendors:
    get:
      tags:
        - vendors
      summary: Get all vendors
      description: Get all vendors
      parameters: []
      responses:
        "200":
          description: Get all vendors
        "400":
          description: invalid input
    post:
      tags:
        - vendors
      summary: Create vendor
      description: Create a vendor for an integration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                first_name:
                  type: string
                  description: First name of the vendor. Maps to the "Contact.FirstName" field in
                    RentManager
                last_name:
                  type: string
                  description: Last name of the vendor. Maps to the "Contact.LastName" field in
                    RentManager
                is_company:
                  type: boolean
                  description: Indicates whether the vendor should be considered a company or
                    person. Maps to the "IsCompany" field in Buildium
                company_name:
                  type: string
                  description: Company name of the vendor. Maps to the "Name" field in RentManager
                email_1:
                  type: string
                  format: email
                  description: Primary email for the vendor. Maps to the "Contact.Email" field in
                    RentManager
                email_2:
                  type: string
                  format: email
                  description: Location email for the vendor. Maps to the "location.email" field
                    in Entrata
                phone_1:
                  type: string
                  description: First phone number. Maps to the "Contact.PhoneNumbers.PhoneNumber"
                    field in RentManager
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: First phone number type. Maps to keys of the "PhoneNumbers" field
                    in Buildium
                phone_2:
                  type: string
                  description: Second phone number. Maps to the "Contact.PhoneNumbers.PhoneNumber"
                    field in RentManager
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: Second phone number type. Maps to keys of the "PhoneNumbers" field
                    in Buildium
                address_1:
                  type: string
                  description: Vendor address line 1. Maps to the "Addresses.Address" field in
                    RentManager
                address_2:
                  type: string
                  description: Vendor address line 2. Maps to the "location.addressLine2" field in
                    Entrata
                city:
                  type: string
                  description: Vendor address city. Maps to the "Addresses.City" field in
                    RentManager
                state:
                  type: string
                  description: Vendor address state. Maps to the "Addresses.State" field in
                    RentManager
                zip:
                  type: string
                  description: Vendor address zip code. Maps to the "Addresses.PostalCode" field
                    in RentManager
                country:
                  type: string
                  description: Vendor address country. Maps to the "location.country" field in
                    Entrata
                category_id:
                  type: string
                  description: The unique identifier of the vendor category type. Maps to the
                    "categories.categoryTypeId" field in Entrata
                x_gl_account_id:
                  type: string
                  description: The unique identifier of the default general ledger account to
                    associate with the vendor. Maps to the "DefaultAccountID"
                    field in RentManager
                account_number:
                  type: string
                  description: The account number of the vendor. Maps to the "AccountNumber" field
                    in RentManager
                website:
                  type: string
                  maxLength: 100
                  format: uri
                  description: The website of the vendor. The value must be a valid URL. Maps to
                    the "Website" field in Buildium
                insurance_provider:
                  type: string
                  maxLength: 65
                  description: Vendor insurance provider. Maps to the "VendorInsurance > Provider"
                    field in Buildium
                insurance_policy_number:
                  type: string
                  maxLength: 65
                  description: Vendor insurance policy number. Maps to the "VendorInsurance >
                    PolicyNumber" field in Buildium
                insurance_expire_date:
                  type: string
                  format: date-time
                  description: Vendor insurance policy expiration date. Maps to the
                    "InsuranceExpiration" field in RentManager
                notes:
                  type: string
                  description: Comments about the vendor. Maps to the "Comment" field in
                    RentManager
                tax_payer_id:
                  type: string
                  description: The unique identifier of the tax payer. Maps to the "TaxID" field
                    in RentManager
                tax_payer_type:
                  type: string
                  enum:
                    - SSN
                    - EIN
                  description: The tax payer type. Required if `tax_payer_id` is set. Maps to the
                    "TaxInformation > TaxPayerType" field in Buildium
                tax_payer_name_1:
                  type: string
                  description: The tax payer first name. Maps to the "nameOnTaxReturn" field in
                    Entrata
                tax_payer_name_2:
                  type: string
                  description: The tax payer last name. Maps to the "nameOnTaxReturn" field in
                    Entrata
                tax_address_1:
                  type: string
                  maxLength: 100
                  description: The tax payer address line 1. Maps to the "TaxInformation > Address
                    > AddressLine1" field in Buildium
                tax_address_2:
                  type: string
                  maxLength: 100
                  description: The tax payer address line 2. Maps to the "TaxInformation > Address
                    > AddressLine2" field in Buildium
                tax_city:
                  type: string
                  maxLength: 100
                  description: The tax payer address city. Maps to the "TaxInformation > Address >
                    City" field in Buildium
                tax_state:
                  type: string
                  description: The tax payer address state. Maps to the "TaxInformation > Address
                    > State" field in Buildium
                tax_zip:
                  type: string
                  description: The tax payer address zip code. Maps to the "TaxInformation >
                    Address > PostalCode" field in Buildium
                tax_country:
                  type: string
                  description: The tax payer address country. Maps to the "TaxInformation >
                    Address > Country" field in Buildium
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                external_id:
                  type: string
                  description: The external identifier of the vendor. Maps to the "externalId"
                    field in Entrata
                location_name:
                  type: string
                  description: Location name for the vendor. Maps to the "location.name" field in
                    Entrata
                payment_method:
                  type: string
                  description: The method of payment for the vendor. Maps to the
                    "remittance.remittanceName" field in Entrata
                payment_type_id:
                  type: string
                  description: The unique identifier for the payment type. Maps to the
                    "remittance.apPaymentTypeId" field in Entrata
                payee_name:
                  type: string
                  description: Full name of the payee associated with the vendor. Will be
                    defaulted to "company_name" if not provided. Maps to the
                    "Payee" field in RentManager
                routing_number:
                  type: string
                  description: The routing number of the vendor bank account. Required only when
                    the payment type is ACH. Maps to the
                    "remittance.routingNumber" field in Entrata
                category:
                  type: string
                  description: Category of the vendor. Maps to the "Category" field in RentManager
                include_in_1099:
                  type: boolean
                  description: Indicates if vendor is 1099. Maps to the "Is1099" field in
                    RentManager
                is_active:
                  type: boolean
                  description: Indicates if vendor is active. Maps to the "IsActive" field in
                    RentManager
              required:
                - integration_id
      responses:
        "200":
          description: Create a vendor for an integration.
        "400":
          description: invalid input
  "/v1/vendors/{id}":
    get:
      tags:
        - vendors
      summary: Get a vendor by ID
      description: Get a vendor by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a vendor by ID
        "400":
          description: invalid input
    put:
      tags:
        - vendors
      summary: Update vendor
      description: Update a vendor for an integration.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                first_name:
                  type: string
                  description: First name of the vendor. Maps to the "Contact.FirstName" field in
                    RentManager
                last_name:
                  type: string
                  description: Last name of the vendor. Maps to the "Contact.LastName" field in
                    RentManager
                is_company:
                  type: boolean
                  description: Indicates whether the vendor should be considered a company or
                    person. Maps to the "IsCompany" field in Buildium
                company_name:
                  type: string
                  description: Company name of the vendor. Maps to the "Name" field in RentManager
                email_1:
                  type: string
                  format: email
                  description: Primary email for the vendor. Maps to the "Contact.Email" field in
                    RentManager
                email_2:
                  type: string
                  format: email
                  description: Location email for the vendor. Maps to the "location.email" field
                    in Entrata
                phone_1:
                  type: string
                  description: First phone number. Maps to the "Contact.PhoneNumbers.PhoneNumber"
                    field in RentManager
                phone_1_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: First phone number type. Maps to keys of the "PhoneNumbers" field
                    in Buildium
                phone_2:
                  type: string
                  description: Second phone number. Maps to the "Contact.PhoneNumbers.PhoneNumber"
                    field in RentManager
                phone_2_type:
                  type: string
                  enum:
                    - HOME
                    - WORK
                    - MOBILE
                    - FAX
                  description: Second phone number type. Maps to keys of the "PhoneNumbers" field
                    in Buildium
                address_1:
                  type: string
                  description: Vendor address line 1. Maps to the "Addresses.Address" field in
                    RentManager
                address_2:
                  type: string
                  description: Vendor address line 2. Maps to the "location.addressLine2" field in
                    Entrata
                city:
                  type: string
                  description: Vendor address city. Maps to the "Addresses.City" field in
                    RentManager
                state:
                  type: string
                  description: Vendor address state. Maps to the "Addresses.State" field in
                    RentManager
                zip:
                  type: string
                  description: Vendor address zip code. Maps to the "Addresses.PostalCode" field
                    in RentManager
                country:
                  type: string
                  description: Vendor address country. Maps to the "location.country" field in
                    Entrata
                category_id:
                  type: string
                  description: The unique identifier of the vendor category type. Maps to the
                    "categories.categoryTypeId" field in Entrata
                x_gl_account_id:
                  type: string
                  description: The unique identifier of the default general ledger account to
                    associate with the vendor. Maps to the "DefaultAccountID"
                    field in RentManager
                account_number:
                  type: string
                  description: The account number of the vendor. Maps to the "AccountNumber" field
                    in RentManager
                website:
                  type: string
                  maxLength: 100
                  format: uri
                  description: The website of the vendor. The value must be a valid URL. Maps to
                    the "Website" field in Buildium
                insurance_provider:
                  type: string
                  maxLength: 65
                  description: Vendor insurance provider. Maps to the "VendorInsurance > Provider"
                    field in Buildium
                insurance_policy_number:
                  type: string
                  maxLength: 65
                  description: Vendor insurance policy number. Maps to the "VendorInsurance >
                    PolicyNumber" field in Buildium
                insurance_expire_date:
                  type: string
                  format: date-time
                  description: Vendor insurance policy expiration date. Maps to the
                    "InsuranceExpiration" field in RentManager
                notes:
                  type: string
                  description: Comments about the vendor. Maps to the "Comment" field in
                    RentManager
                tax_payer_id:
                  type: string
                  description: The unique identifier of the tax payer. Maps to the "TaxID" field
                    in RentManager
                tax_payer_type:
                  type: string
                  enum:
                    - SSN
                    - EIN
                  description: The tax payer type. Required if `tax_payer_id` is set. Maps to the
                    "TaxInformation > TaxPayerType" field in Buildium
                tax_payer_name_1:
                  type: string
                  description: The tax payer first name. Maps to the "nameOnTaxReturn" field in
                    Entrata
                tax_payer_name_2:
                  type: string
                  description: The tax payer last name. Maps to the "nameOnTaxReturn" field in
                    Entrata
                tax_address_1:
                  type: string
                  maxLength: 100
                  description: The tax payer address line 1. Maps to the "TaxInformation > Address
                    > AddressLine1" field in Buildium
                tax_address_2:
                  type: string
                  maxLength: 100
                  description: The tax payer address line 2. Maps to the "TaxInformation > Address
                    > AddressLine2" field in Buildium
                tax_city:
                  type: string
                  maxLength: 100
                  description: The tax payer address city. Maps to the "TaxInformation > Address >
                    City" field in Buildium
                tax_state:
                  type: string
                  description: The tax payer address state. Maps to the "TaxInformation > Address
                    > State" field in Buildium
                tax_zip:
                  type: string
                  description: The tax payer address zip code. Maps to the "TaxInformation >
                    Address > PostalCode" field in Buildium
                tax_country:
                  type: string
                  description: The tax payer address country. Maps to the "TaxInformation >
                    Address > Country" field in Buildium
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                x_property_id:
                  type: string
                  description: The unique identifier of the property associated with the vendor.
                    Maps to the "propertyId" field in Entrata
                is_compliant:
                  type: boolean
                  description: Indicates if the property associated with the vendor is compliant.
                    Maps to the "compliance_status_id" field in Entrata
                external_id:
                  type: string
                  description: The external identifier of the vendor. Maps to the "externalId"
                    field in Entrata
                location_name:
                  type: string
                  description: Location name for the vendor. Maps to the "location.name" field in
                    Entrata
                payment_method:
                  type: string
                  description: The method of payment for the vendor. Maps to the
                    "remittance.remittanceName" field in Entrata
                payment_type_id:
                  type: string
                  description: The unique identifier for the payment type. Maps to the
                    "remittance.apPaymentTypeId" field in Entrata
                routing_number:
                  type: string
                  description: The routing number of the vendor bank account. Required only when
                    the payment type is ACH. Maps to the
                    "remittance.routingNumber" field in Entrata
                payee_name:
                  type: string
                  description: Full name of the payee associated with the vendor. Will be
                    defaulted to "company_name" if not provided. Maps to the
                    "Payee" field in RentManager
                category:
                  type: string
                  description: Category of the vendor. Maps to the "Category" field in RentManager
                address_type_id:
                  type: string
                  description: Vendor address type ID. Maps to the "Addresses.AddressTypeID" field
                    in RentManager
                include_in_1099:
                  type: boolean
                  description: Indicates if vendor is 1099. Maps to the "Is1099" field in
                    RentManager
                is_active:
                  type: boolean
                  description: Indicates if vendor is active. Maps to the "IsActive" field in
                    RentManager
              required:
                - id
      responses:
        "200":
          description: Update a vendor for an integration.
        "400":
          description: invalid input
  /v1/work-orders:
    get:
      tags:
        - work-orders
      summary: Get all work orders
      description: Get all work orders
      parameters: []
      responses:
        "200":
          description: Get all work orders
        "400":
          description: invalid input
    post:
      tags:
        - work-orders
      summary: Create work order
      description: Create a work order for an integration.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                property_id:
                  type: string
                  description: The Propify property ID associated with the work order
                unit_id:
                  type: string
                  description: The Propify unit ID associated with the work order
                task_title:
                  type: string
                  description: Title assigned to the request. Maps to the "Title" field in
                    RentManager
                work_details:
                  type: string
                  description: The description of the work order. Maps to the "description" field
                    in Rentvine
                permission_to_enter:
                  type: boolean
                  description: Indicates whether entry has been allowed to the unit. Maps to the
                    "IsAllowedToEnter" field in RentManager
                assigned_to_id:
                  type: string
                  description: The unique identifier of the user assigned to the work order. Maps
                    to the "assignedToUserID" field in Rentvine
                due_date:
                  type: string
                  format: date-time
                  description: The due date assigned to the request. Maps to the "DueDate" field
                    in RentManager
                entry_details:
                  type: string
                  maxLength: 65535
                  description: Notes specific to entering the unit. Maps to the "EntryNotes" field
                    in Buildium
                invoice_number:
                  type: string
                  maxLength: 50
                  description: The invoice or reference number that the vendor assigned to the
                    work order. Maps to the "InvoiceNumber" field in Buildium
                priority:
                  type: string
                  enum:
                    - Low
                    - Normal
                    - High
                  description: Task priority. Maps to the "Task > Priority" field in Buildium
                status:
                  type: string
                  enum:
                    - New
                    - InProgress
                    - Completed
                    - Deferred
                    - Closed
                  description: Task status. Maps to the "Task > Status" field in Buildium
                vendor_notes:
                  type: string
                  description: Instructions for the vendor. Maps to the "vendorInstructions" field
                    in Rentvine
                x_property_id:
                  type: string
                  description: The unique identifier of the property associated with the work
                    order. Maps to the "propertyID" field in Rentvine
                x_resident_id:
                  type: string
                  description: The unique identifier of the resident associated with the work
                    order. Maps to the "requestedByContactID" field in Rentvine
                x_unit_id:
                  type: string
                  description: The unique identifier of the unit associated with the work order.
                    Maps to the "unitID" field in Rentvine
                x_vendor_id:
                  type: string
                  description: The unique identifier of the vendor associated with the work order.
                    Maps to the "vendorContactID" field in Rentvine
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                building_name:
                  type: string
                  description: The name of the building associated with the request. Maps to the
                    "buildingName" field in Entrata
                category_id:
                  type: string
                  description: The unique identifier of the category associated with the request.
                    Maps to the "CategoryID" field in RentManager
                is_floating:
                  type: boolean
                  description: Indicates if work order is floating. Required to be true if there
                    is no associated lease or resident. Maps to the
                    "isFloatingWorkOrder" field in Entrata
                location_id:
                  type: string
                  description: The unique identifier of the location associated with the request.
                    Maps to the "maintenanceLocationId" field in Entrata
                main_phone:
                  type: string
                  description: The main phone number associated with the request. Maps to the
                    "mainPhoneNumber" field in Entrata
                pet_details:
                  type: string
                  description: Pet details are required if the lease has pets or if permission to
                    enter is denied so that a reason why entry is not permitted
                    can be explained or a pet warning given. Maps to the
                    "petsDescription" field in Entrata
                priority_id:
                  type: string
                  description: The unique identifier of work order priority. Maps to the
                    "priorityID" field in Rentvine
                problem_id:
                  type: string
                  description: The unique identifier of the problem associated with the request.
                    Maps to the "maintenanceProblemId" field in Entrata
                scheduled_end_date:
                  type: string
                  format: date-time
                  description: The scheduled end date of the work order. Maps to the
                    "scheduledEndDate" field in Rentvine
                scheduled_start_date:
                  type: string
                  format: date-time
                  description: The scheduled start date of the work order. Maps to the
                    "scheduledStartDate" field in Rentvine
                sub_problem_id:
                  type: string
                  description: The unique identifier of the sub problem associated with the
                    request. Maps to the "subMaintenanceProblemId" field in
                    Entrata
                unit_number:
                  type: string
                  description: The unit number associated with the request. Maps to the
                    "unitNumber" field in Entrata
                x_lease_id:
                  type: string
                  description: The unique identifier of the lease associated with the work order.
                    Maps to the "leaseID" field in Rentvine
                status_id:
                  type: string
                  description: The unique identifier of work order status. Maps to the
                    "workOrderStatusID" field in Rentvine
                invoice_amount:
                  type: integer
                  description: The estimated amount in cents for the work order. Maps to the
                    "estimatedAmount" field in Rentvine
              required:
                - integration_id
      responses:
        "200":
          description: Create a work order for an integration.
        "400":
          description: invalid input
  "/v1/work-orders/{id}":
    get:
      tags:
        - work-orders
      summary: Get a work order by ID
      description: Get a work order by ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get a work order by ID
        "400":
          description: invalid input
    put:
      tags:
        - work-orders
      summary: Update work order
      description: Update a work order for an integration.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entry_details:
                  type: string
                  maxLength: 65535
                  description: Notes specific to entering the unit. Maps to the "EntryNotes" field
                    in Buildium
                id:
                  type: string
                invoice_number:
                  type: string
                  maxLength: 50
                  description: The invoice or reference number that the vendor assigned to the
                    work order. Maps to the "InvoiceNumber" field in Buildium
                permission_to_enter:
                  type: boolean
                  description: Whether the maintenance team has permission to enter the premises
                vendor_notes:
                  type: string
                  description: Notes from the vendor. Maps to the "closingComments" field in
                    Entrata
                work_details:
                  type: string
                  description: A full description of the work order
                x_resident_id:
                  type: string
                  description: Resident unique identifier. Maps to the "customerId" field in
                    Entrata
                x_vendor_id:
                  type: string
                  description: The unique identifier of the vendor associated with the request.
                    Maps to the "VendorID" field in RentManager
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                assigned_to_id:
                  type: string
                  description: The unique identifier of the staff associated with the request.
                    Maps to the "AssignedToUserID" field in RentManager
                category_id:
                  type: string
                  description: The unique identifier of the category associated with the request.
                    Maps to the "CategoryID" field in RentManager
                completed_date:
                  type: string
                  format: date-time
                  description: The completed date associated with the request. Maps to the
                    "completedDateTime" field in Entrata
                due_date:
                  type: string
                  format: date-time
                  description: The due date assigned to the request. Maps to the "DueDate" field
                    in RentManager
                location_id:
                  type: string
                  description: The unique identifier of the location associated with the request.
                    Maps to the "maintenanceLocationId" field in Entrata
                main_phone:
                  type: string
                  description: The main phone number associated with the request. Maps to the
                    "mainPhoneNumber" field in Entrata
                pet_details:
                  type: string
                  description: Pet details are required if the lease has pets or if permission to
                    enter is denied so that a reason why entry is not permitted
                    can be explained or a pet warning given. Maps to the
                    "petsDescription" field in Entrata
                priority_id:
                  type: string
                  description: The unique identifier of the priority associated with the request.
                    Maps to the "PriorityID" field in RentManager
                problem_id:
                  type: string
                  description: The unique identifier of the problem associated with the request.
                    Maps to the "maintenanceProblemId" field in Entrata
                scheduled_end_date:
                  type: string
                  format: date-time
                  description: The scheduled end date assigned to the request. Maps to the
                    "AssignedCloseDate" field in RentManager
                scheduled_start_date:
                  type: string
                  format: date-time
                  description: The scheduled start date assigned to the request. Maps to the
                    "AssignedOpenDate" field in RentManager
                status_id:
                  type: string
                  description: The unique identifier of the status associated with the request.
                    Maps to the "StatusID" field in RentManager
                sub_problem_id:
                  type: string
                  description: The unique identifier of the sub problem associated with the
                    request. Maps to the "subMaintenanceProblemId" field in
                    Entrata
                x_lease_id:
                  type: string
                  description: The unique identifier of the lease associated with the request.
                    Maps to the "leaseId" field in Entrata
                x_parent_work_order_id:
                  type: string
                  description: Unique indentifier of the parent work order associated with the
                    request. Maps to the "parentWorkOrderId" field in Entrata
                x_property_id:
                  type: string
                  description: The unique identifier of property associated with the request. Maps
                    to the "propertyId" field in Entrata
                task_title:
                  type: string
                  description: The title of the work order
              required:
                - id
      responses:
        "200":
          description: Update a work order for an integration.
        "400":
          description: invalid input
  /v1/admin/logs/jobs:
    get:
      tags:
        - admin
      summary: Get logs
      description: Get all logs
      parameters:
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get all logs
        "400":
          description: invalid input
  "/v1/admin/logs/jobs/{id}":
    get:
      tags:
        - admin
      summary: Get logs for job
      description: Get all logs for job ID
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
            description: "Order the results by a field. Optionally include asc or desc
              preceded by a colon (default is asc). Example:
              ?order-by=vendor:asc,created_at:desc"
          required: false
          name: order-by
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Can be used for paginating results
          required: false
          name: offset
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            maximum: 250
            default: 100
            description: A number between 1 and 250 to determine the number of results to
              return in a single query
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Get all logs for job ID
        "400":
          description: invalid input
  /v1/admin/integrations:
    get:
      tags:
        - admin
      summary: Get all my integrations
      description: Get all my integrations
      parameters: []
      responses:
        "200":
          description: Get all my integrations
        "400":
          description: invalid input
    post:
      tags:
        - admin
      summary: Create an integration
      description: Create an integration
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_vendor:
                  type: string
                  enum:
                    - BUILDIUM
                    - ENTRATA
                    - PROPERTYWARE
                    - REALPAGE
                    - RENTMANAGER
                    - YARDI
                    - RENTVINE
                    - REALPAGE_APP
                    - MRI
                    - RESMAN
                  description: The integration vendor
                credentials:
                  anyOf:
                    - type: object
                      properties:
                        username:
                          type: string
                        password:
                          type: string
                        database:
                          type: string
                        serverName:
                          type: string
                        platform:
                          type: string
                        entity:
                          type: string
                        license:
                          type: string
                        companyId:
                          type: string
                      required:
                        - username
                        - password
                        - database
                        - serverName
                        - platform
                        - entity
                        - license
                        - companyId
                      description: Yardi authentication credentials
                    - type: object
                      properties:
                        PMC_ID:
                          type: string
                        SITE_ID:
                          type: string
                        LICENSE_KEY:
                          type: string
                        ONESITE_USERNAME:
                          type: string
                        ftp_credentials:
                          type: object
                          properties:
                            SFTP_HOST:
                              type: string
                            SFTP_PORT:
                              type: number
                            SFTP_USERNAME:
                              type: string
                            SFTP_PASSWORD:
                              type: string
                            SFTP_DIR:
                              type: string
                          required:
                            - SFTP_HOST
                            - SFTP_PORT
                            - SFTP_USERNAME
                            - SFTP_PASSWORD
                            - SFTP_DIR
                      required:
                        - PMC_ID
                        - SITE_ID
                        - LICENSE_KEY
                        - ONESITE_USERNAME
                      description: RealPage authentication credentials
                    - type: object
                      properties:
                        clientId:
                          type: string
                        secret:
                          type: string
                      required:
                        - clientId
                        - secret
                      description: Buildium authentication credentials
                    - type: object
                      properties:
                        username:
                          type: string
                        password:
                          type: string
                        companyId:
                          type: string
                      required:
                        - username
                        - password
                        - companyId
                    - type: object
                      properties:
                        accessToken:
                          type: string
                        companyId:
                          type: string
                      required:
                        - accessToken
                        - companyId
                    - type: object
                      properties:
                        username:
                          type: string
                        password:
                          type: string
                      required:
                        - username
                        - password
                      description: Propertyware authentication credentials
                    - type: object
                      properties:
                        Username:
                          type: string
                        Password:
                          type: string
                        companyId:
                          type: string
                      required:
                        - Username
                        - Password
                        - companyId
                      description: RentManager authentication credentials
                    - type: object
                      properties:
                        apiKey:
                          type: string
                        apiSecret:
                          type: string
                        companyId:
                          type: string
                      required:
                        - apiKey
                        - apiSecret
                        - companyId
                      description: Rentvine authentication credentials
                    - type: object
                      properties:
                        clientId:
                          type: string
                        databaseName:
                          type: string
                        partnerKey:
                          type: string
                        username:
                          type: string
                        password:
                          type: string
                      required:
                        - clientId
                        - databaseName
                        - partnerKey
                        - username
                        - password
                      description: MRI authentication credentials
                  description: JSON encoded credentials for accessing the integration vendor API
                name:
                  type: string
                  description: The name of the integration
                system:
                  type: string
                  enum:
                    - PRODUCTION
                    - SANDBOX
                    - DEMO
                  description: The system the integration is associated with
                max_request_cadence:
                  type: string
                  enum:
                    - MINUTE
                    - HOUR
                    - DAY
                    - WEEK
                    - MONTH
                    - SECOND
                  description: Cadence at which to limit the max request frequency
                max_request_frequency:
                  type: number
                  description: Maximum number of jobs that can be run in the max request cadence
                max_job_concurrency:
                  type: number
                  description: Maximum number of jobs that can be run at once for the integration
                active:
                  type: boolean
                  description: The active state of the integration
                base_url:
                  type: string
                  nullable: true
                  format: uri
                  description: Base URL for the integration vendor API. This is ignored for
                    RealPage.
              required:
                - integration_vendor
                - credentials
                - name
                - system
                - max_request_cadence
                - max_request_frequency
                - max_job_concurrency
      responses:
        "200":
          description: Create an integration
        "400":
          description: invalid input
  /v1/admin/users:
    get:
      tags:
        - admin
      summary: Get all my users
      description: Get all my users
      parameters: []
      responses:
        "200":
          description: Get all my users
        "400":
          description: invalid input
    post:
      tags:
        - admin
      summary: Create a user
      description: Create a user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: The first name of the user
                last_name:
                  type: string
                  description: The last name of the user
                email:
                  type: string
                  format: email
                  description: The email of the user
                phone:
                  type: string
                  description: The phone number of the user
                roles:
                  type: array
                  items:
                    type: string
                    enum:
                      - ADMIN
                      - DEVELOPER
                  description: The roles the user has assigned to them
              required:
                - first_name
                - last_name
                - email
                - roles
      responses:
        "200":
          description: Create a user
        "400":
          description: invalid input
  "/v1/admin/users/{id}":
    get:
      tags:
        - admin
      summary: Get user by id
      description: Get user by id
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Get user by id
        "400":
          description: invalid input
    put:
      tags:
        - admin
      summary: Update a user
      description: Update a user
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier for the user
                first_name:
                  type: string
                  description: The first name of the user
                last_name:
                  type: string
                  description: The last name of the user
                roles:
                  type: array
                  items:
                    type: string
                    enum:
                      - ADMIN
                      - DEVELOPER
                  description: The roles the user has assigned to them
              required:
                - id
      responses:
        "200":
          description: Update a user
        "400":
          description: invalid input
  "/v1/amenities/units/{id}":
    post:
      tags:
        - amenities
      summary: Create amenity for unit
      description: Create an amenity for any integration. This is a convenience
        endpoint that acts as a generic proxy for all amenity creation
        endpoints.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amenity:
                  type: string
                  description: The amenity name
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                integration_id:
                  type: string
                vendor:
                  type: string
                  enum:
                    - BUILDIUM
                    - ENTRATA
                    - PROPERTYWARE
                    - REALPAGE
                    - RENTMANAGER
                    - YARDI
                    - RENTVINE
                    - REALPAGE_APP
                    - MRI
                    - RESMAN
              required:
                - amenity
                - integration_id
                - vendor
      responses:
        "200":
          description: Create an amenity for any integration. This is a convenience
            endpoint that acts as a generic proxy for all amenity creation
            endpoints.
        "400":
          description: invalid input
    put:
      tags:
        - applicants
      summary: Update applicant
      description: Update an applicant for an integration.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                features:
                  type: array
                  items:
                    type: string
                    enum:
                      - CableReady
                      - Microwave
                      - HardwoodFloors
                      - HighSpeedInternet
                      - AirConditioning
                      - Refrigerator
                      - Dishwasher
                      - WalkinClosets
                      - BalconyOrDeckOrPatio
                      - GarageParking
                      - Carport
                      - FencedYard
                      - LaundryRoomOrHookups
                      - Fireplace
                      - CableReadyCommercial
                      - HighSpeedInternetCommercial
                      - AirConditioningCommercial
                      - Heating
                      - OvenOrRange
                      - HeatElectric
                      - HeatGas
                      - HeatOil
                      - PetsAllowed
                      - Balcony
                      - PrivateBalcony
                      - PrivatePatio
                      - Dryer
                      - Heat
                      - WD_Hookup
                      - Washer
                      - AdditionalStorage
                      - Alarm
                      - Carpet
                      - CeilingFan
                      - ControlledAccess
                      - Courtyard
                      - Disposal
                      - DoubleSinkVanity
                      - FramedMirrors
                      - Furnished
                      - Handrails
                      - IndividualClimateControl
                      - IslandKitchen
                      - LinenCloset
                      - Pantry
                      - Satellite
                      - Skylight
                      - TileFlooring
                      - VaultedCeiling
                      - View
                      - VinylFlooring
                      - WheelChair
                      - WindowCoverings
                  description: A list of unit amenities. Any existing amenities associated with
                    the unit that are not submitted in the request will be
                    removed from the unit
              required:
                - id
      responses:
        "200":
          description: Update an applicant for an integration.
        "400":
          description: invalid input
  "/v1/amenities/properties/{id}":
    post:
      tags:
        - amenities
      summary: "*Create amenity for property"
      description: Create an amenity for any integration. This is a convenience
        endpoint that acts as a generic proxy for all amenity creation
        endpoints.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amenity:
                  type: string
                  description: The amenity name
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
                integration_id:
                  type: string
                vendor:
                  type: string
                  enum:
                    - BUILDIUM
                    - ENTRATA
                    - PROPERTYWARE
                    - REALPAGE
                    - RENTMANAGER
                    - YARDI
                    - RENTVINE
                    - REALPAGE_APP
                    - MRI
                    - RESMAN
              required:
                - amenity
                - integration_id
                - vendor
      responses:
        "200":
          description: Create an amenity for any integration. This is a convenience
            endpoint that acts as a generic proxy for all amenity creation
            endpoints.
        "400":
          description: invalid input
    put:
      tags:
        - applicants
      summary: Update applicant
      description: Update an applicant for an integration.
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                features:
                  type: array
                  items:
                    type: string
                    enum:
                      - LaundryRoom
                      - WheelchairAccess
                      - DoorAttendant
                      - Elevator
                      - Parking
                      - StorageUnits
                      - Pool
                      - FitnessCenter
                      - TennisCourt
                      - ClubHouse
                      - Power
                      - ParkingCommercial
                      - SprinklerSystem
                      - DockHighDoorsOrLoadingAvailable
                      - Availability24Hours
                      - AccentWalls
                      - BasketballCourt
                      - Bilingual
                      - BoatDocks
                      - BusinessCenter
                      - CarWashArea
                      - ChildCare
                      - ClubDiscount
                      - ConferenceRoom
                      - Concierge
                      - FreeWeights
                      - FurnishedAvailable
                      - GamingStations
                      - Garage
                      - Gate
                      - GroceryService
                      - GroupExercise
                      - GuestRoom
                      - Housekeeping
                      - HouseSitting
                      - JoggingWalkingTrails
                      - LakeFront
                      - LakeAccess
                      - Library
                      - MealService
                      - MediaRoom
                      - MultiUseRoom
                      - NightPatrol
                      - OnSiteMaintenance
                      - OnSiteManagement
                      - PackageReceiving
                      - PerDiemAccepted
                      - PlayGround
                      - Racquetball
                      - RecRoom
                      - Recycling
                      - Sauna
                      - ShortTermLease
                      - SmokeFree
                      - Spa
                      - Sundeck
                      - Transportation
                      - TVLounge
                      - ValetTrash
                      - Vintage
                      - VolleyballCourt
                      - WirelessInternet
                      - HighSpeedInternet
                  description: A list of overall property amenities. Any previously saved values
                    that are not submitted in the update request will be deleted
                included_in_rent:
                  type: array
                  items:
                    type: string
                    enum:
                      - Gas
                      - Electric
                      - Trash
                      - Water
                      - HotWater
                      - Telephone
                      - Heat
                      - Cable
                      - AirCon
                      - Satellite
                      - Sewer
                      - BroadbandInternet
                  description: A list of amenities that are included in rent. Any previously saved
                    values that are not submitted in the update request will be
                    deleted
              required:
                - id
      responses:
        "200":
          description: Update an applicant for an integration.
        "400":
          description: invalid input
  "/v1/admin/integrations/{integration_id}":
    get:
      tags:
        - admin
      summary: Get integration by id
      description: Get integration by id
      parameters:
        - schema:
            type: string
          required: true
          name: integration_id
          in: path
      responses:
        "200":
          description: Get integration by id
        "400":
          description: invalid input
    put:
      tags:
        - admin
      summary: Update an integration
      description: Update an integration
      parameters:
        - schema:
            type: string
          required: true
          name: integration_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: string
                  description: The unique identifier for the integration
                integration_vendor:
                  type: string
                  enum:
                    - BUILDIUM
                    - ENTRATA
                    - PROPERTYWARE
                    - REALPAGE
                    - RENTMANAGER
                    - YARDI
                    - RENTVINE
                    - REALPAGE_APP
                    - MRI
                    - RESMAN
                  description: The integration vendor
                credentials:
                  anyOf:
                    - type: object
                      properties:
                        username:
                          type: string
                        password:
                          type: string
                        database:
                          type: string
                        serverName:
                          type: string
                        platform:
                          type: string
                        entity:
                          type: string
                        license:
                          type: string
                        companyId:
                          type: string
                      required:
                        - username
                        - password
                        - database
                        - serverName
                        - platform
                        - entity
                        - license
                        - companyId
                      description: Yardi authentication credentials
                    - type: object
                      properties:
                        PMC_ID:
                          type: string
                        SITE_ID:
                          type: string
                        LICENSE_KEY:
                          type: string
                        ONESITE_USERNAME:
                          type: string
                        ftp_credentials:
                          type: object
                          properties:
                            SFTP_HOST:
                              type: string
                            SFTP_PORT:
                              type: number
                            SFTP_USERNAME:
                              type: string
                            SFTP_PASSWORD:
                              type: string
                            SFTP_DIR:
                              type: string
                          required:
                            - SFTP_HOST
                            - SFTP_PORT
                            - SFTP_USERNAME
                            - SFTP_PASSWORD
                            - SFTP_DIR
                      required:
                        - PMC_ID
                        - SITE_ID
                        - LICENSE_KEY
                        - ONESITE_USERNAME
                      description: RealPage authentication credentials
                    - type: object
                      properties:
                        clientId:
                          type: string
                        secret:
                          type: string
                      required:
                        - clientId
                        - secret
                      description: Buildium authentication credentials
                    - type: object
                      properties:
                        username:
                          type: string
                        password:
                          type: string
                        companyId:
                          type: string
                      required:
                        - username
                        - password
                        - companyId
                    - type: object
                      properties:
                        accessToken:
                          type: string
                        companyId:
                          type: string
                      required:
                        - accessToken
                        - companyId
                    - type: object
                      properties:
                        username:
                          type: string
                        password:
                          type: string
                      required:
                        - username
                        - password
                      description: Propertyware authentication credentials
                    - type: object
                      properties:
                        Username:
                          type: string
                        Password:
                          type: string
                        companyId:
                          type: string
                      required:
                        - Username
                        - Password
                        - companyId
                      description: RentManager authentication credentials
                    - type: object
                      properties:
                        apiKey:
                          type: string
                        apiSecret:
                          type: string
                        companyId:
                          type: string
                      required:
                        - apiKey
                        - apiSecret
                        - companyId
                      description: Rentvine authentication credentials
                    - type: object
                      properties:
                        clientId:
                          type: string
                        databaseName:
                          type: string
                        partnerKey:
                          type: string
                        username:
                          type: string
                        password:
                          type: string
                      required:
                        - clientId
                        - databaseName
                        - partnerKey
                        - username
                        - password
                      description: MRI authentication credentials
                  description: JSON encoded credentials for accessing the integration vendor API
                name:
                  type: string
                  description: The name of the integration
                system:
                  type: string
                  enum:
                    - PRODUCTION
                    - SANDBOX
                    - DEMO
                  description: The system the integration is associated with
                max_request_cadence:
                  type: string
                  enum:
                    - MINUTE
                    - HOUR
                    - DAY
                    - WEEK
                    - MONTH
                    - SECOND
                  description: Cadence at which to limit the max request frequency
                max_request_frequency:
                  type: number
                  description: Maximum number of jobs that can be run in the max request cadence
                max_job_concurrency:
                  type: number
                  description: Maximum number of jobs that can be run at once for the integration
                active:
                  type: boolean
                  description: The active state of the integration
                base_url:
                  type: string
                  nullable: true
                  format: uri
                  description: Base URL for the integration vendor API. This is ignored for
                    RealPage.
              required:
                - integration_id
      responses:
        "200":
          description: Update an integration
        "400":
          description: invalid input
  "/v1/admin/integrations/{integration_id}/job-schedules":
    get:
      tags:
        - admin
      summary: Get job schedules by integration id
      description: Get job schedules by integration id
      parameters:
        - schema:
            type: string
          required: true
          name: integration_id
          in: path
      responses:
        "200":
          description: Get job schedules by integration id
        "400":
          description: invalid input
  "/v1/properties/{property_id}/units":
    post:
      tags:
        - units
      summary: "*Create unit"
      description: Create a unit for a property.
      parameters:
        - schema:
            type: string
          required: true
          name: property_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: The unit number
                bedrooms:
                  type: string
                  description: The number of bedrooms
                bathrooms:
                  type: string
                  description: The number of bathrooms
                square_feet:
                  type: integer
                  minimum: 0
                  description: The square footage of the unit
                building_number:
                  type: string
                  description: The building number
                building_name:
                  type: string
                  description: The building name
                floor_plan_code:
                  type: string
                  description: The floor plan code
                floor_plan_name:
                  type: string
                  description: The floor plan name
                floor:
                  type: string
                  description: Floor number/name
                street_address_1:
                  type: string
                  description: The street address line 1
                street_address_2:
                  type: string
                  description: The street address line 2
                city:
                  type: string
                  description: The city
                state:
                  type: string
                  description: The state
                zip:
                  type: string
                  description: The zip code
                is_available:
                  type: boolean
                  description: Whether the unit is available
                is_furnished:
                  type: boolean
                  description: Whether the unit is furnished
                is_listed:
                  type: boolean
                  description: Whether the unit is listed
                is_vacant:
                  type: boolean
                  description: Whether the unit is vacant
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
      responses:
        "200":
          description: Create a unit for a property.
        "400":
          description: invalid input
  "/v1/properties/{property_id}/units/{unit_id}":
    put:
      tags:
        - units
      summary: Update unit
      description: Update a unit for a property.
      parameters:
        - schema:
            type: string
          required: true
          name: property_id
          in: path
        - schema:
            type: string
          required: true
          name: unit_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                number:
                  type: string
                  description: The unit number
                bedrooms:
                  type: string
                  description: The number of bedrooms
                bathrooms:
                  type: string
                  description: The number of bathrooms
                square_feet:
                  type: integer
                  minimum: 0
                  description: The square footage of the unit
                building_number:
                  type: string
                  description: The building number
                building_name:
                  type: string
                  description: The building name
                floor_plan_code:
                  type: string
                  description: The floor plan code
                floor_plan_name:
                  type: string
                  description: The floor plan name
                floor:
                  type: string
                  description: Floor number/name
                street_address_1:
                  type: string
                  description: The street address line 1
                street_address_2:
                  type: string
                  description: The street address line 2
                city:
                  type: string
                  description: The city
                state:
                  type: string
                  description: The state
                zip:
                  type: string
                  description: The zip code
                is_available:
                  type: boolean
                  description: Whether the unit is available
                is_furnished:
                  type: boolean
                  description: Whether the unit is furnished
                is_listed:
                  type: boolean
                  description: Whether the unit is listed
                is_vacant:
                  type: boolean
                  description: Whether the unit is vacant
                custom_data:
                  type: object
                  properties: {}
                  description: Custom data
              required:
                - id
      responses:
        "200":
          description: Update a unit for a property.
        "400":
          description: invalid input
  "/v1/admin/integrations/{integration_id}/job-schedules/{job_schedule_id}":
    get:
      tags:
        - admin
      summary: Get job schedule by id
      description: Get job schedule by id
      parameters:
        - schema:
            type: string
          required: true
          name: integration_id
          in: path
        - schema:
            type: string
          required: true
          name: job_schedule_id
          in: path
      responses:
        "200":
          description: Get job schedule by id
        "400":
          description: invalid input
    put:
      tags:
        - admin
      summary: Update a job schedule
      description: Update a job schedule
      parameters:
        - schema:
            type: string
          required: true
          name: integration_id
          in: path
        - schema:
            type: string
          required: true
          name: job_schedule_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                job_schedule_id:
                  type: string
                  description: The unique identifier for the job schedule
                integration_id:
                  type: string
                  description: The unique identifier for the integration
                job_type:
                  type: string
                  description: The name of the job type
                status:
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
                  description: The status of the job schedule
                sync_frequency:
                  type: number
                  description: The sync frequency of the job schedule
                sync_cadence:
                  type: string
                  enum:
                    - MINUTE
                    - HOUR
                    - DAY
                    - WEEK
                    - MONTH
                    - SECOND
                  description: The sync cadence of the job schedule
                parameters:
                  type: object
                  properties: {}
                  description: The parameters of the job schedule
              required:
                - job_schedule_id
                - integration_id
      responses:
        "200":
          description: Update a job schedule
        "400":
          description: invalid input
